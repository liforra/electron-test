name: Build with Electron Forge (CI Pre-release)

on:
  push:
    branches:
      - "**"

jobs:
  linux:
    name: Linux (deb/rpm/flatpak/appimage)
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install system deps for deb/rpm/flatpak/appimage
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            dpkg-dev debhelper fakeroot \
            rpm cpio \
            libarchive-tools \
            flatpak flatpak-builder bubblewrap ostree \
            desktop-file-utils appstream
          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08

      - name: Install dependencies
        run: npm ci

      - name: Build (Forge make)
        env:
          DEBUG: electron-forge:*
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            out/make/**/*.deb
            out/make/**/*.rpm
            out/make/**/*.flatpak
            out/make/**/*.AppImage
            out/make/**/*.zip
            out/make/**/*.tar.gz
          if-no-files-found: warn

  windows:
    name: Windows (Squirrel)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Clean previous builds
        run: |
          if (Test-Path "out") { Remove-Item -Recurse -Force "out" }
        shell: powershell

      - name: Exclude paths from Windows Defender
        run: |
          Add-MpPreference -ExclusionPath "$env:GITHUB_WORKSPACE"
          Add-MpPreference -ExclusionPath "$env:GITHUB_WORKSPACE\node_modules"
          Add-MpPreference -ExclusionPath "$env:GITHUB_WORKSPACE\out"
        shell: powershell

      - name: Build with PowerShell retry
        run: |
          $maxAttempts = 3
          $attempt = 1

          do {
            Write-Host "Attempt $attempt of $maxAttempts..."
            
            # Clean output dir before retry
            if (Test-Path "out") { 
              Remove-Item -Recurse -Force "out" -ErrorAction SilentlyContinue
              Start-Sleep -Seconds 2
            }
            
            try {
              npm run make
              Write-Host "Build successful on attempt $attempt"
              exit 0
            }
            catch {
              Write-Host "Attempt $attempt failed: $($_.Exception.Message)"
              if ($attempt -lt $maxAttempts) {
                Write-Host "Waiting 10 seconds before retry..."
                Start-Sleep -Seconds 10
              }
            }
            
            $attempt++
          } while ($attempt -le $maxAttempts)

          Write-Host "All attempts failed"
          exit 1
        shell: powershell

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            out/make/**/*.exe
            out/make/**/*.msi
            out/make/**/*.zip
          if-no-files-found: warn

  macos:
    name: macOS (zip)
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build (Forge make)
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            out/make/**/*.dmg
            out/make/**/*.zip
          if-no-files-found: warn

  prerelease:
    name: Create/Update Pre-release
    needs: [linux, windows, macos]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Generate tag and release name
        id: meta
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          BRANCH="${GITHUB_REF_NAME}"
          RUNID="${GITHUB_RUN_ID}"
          # Sanitize branch for tag
          TAG_SAFE=$(echo "$BRANCH" | tr '/@# ' '----')
          TAG="ci-${TAG_SAFE}-${SHORT_SHA}-${RUNID}"
          NAME="CI Pre-release ${BRANCH} ${SHORT_SHA}"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "name=${NAME}" >> "$GITHUB_OUTPUT"

      - name: Create or update GitHub pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.name }}
          prerelease: true
          generate_release_notes: true
          files: |
            dist-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
